/*
 * CAN.c
 *
 *  Created on: Nov 5, 2022
 *      Author: miros
 */
#include "CAN.h"

CAN_FilterTypeDef canFil;
uint32_t txMailbox;

void CAN_INIT(CAN_HandleTypeDef *hcan)
{
	canFil.FilterBank = 0;
	canFil.FilterMode = CAN_FILTERMODE_IDMASK;
	canFil.FilterFIFOAssignment = CAN_FILTER_FIFO0;
	canFil.FilterScale = CAN_FILTERSCALE_32BIT;
	canFil.FilterIdHigh = 0x7E8 << 5;
	canFil.FilterIdLow = 0x0000;
	canFil.FilterMaskIdHigh = 0xFFFF;
	canFil.FilterMaskIdLow = 0x0000;
	canFil.FilterActivation = ENABLE;

	HAL_CAN_ConfigFilter(&hcan, &canFil);
	HAL_CAN_Start(&hcan);
	HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
}

void CAN_REQUEST(uint8_t serviceID, uint8_t lenght, uint8_t PID, CAN_HandleTypeDef *hcan)
{
	CAN_TxHeaderTypeDef requestHeader;
	uint_8 requestFrame[8] = {lenght, serviceID, PID, 0x00, 0x00, 0x00, 0x00, 0x00};
	requestHeader.DLC = 8;
	requestHeader.StdId = 0x7DF;
	requestHeader.IDE = CAN_ID_STD;
	requestHeader.RTR = CAN_RTR_REMOTE;

	HAL_CAN_AddTxMessage(&hcan, &requestHeader, requestFrame, &txMailbox);
}

uint8_t CAN_RESPONSE(CAN_HandleTypeDef *hcan)
{
	CAN_RxHeaderTypeDef responseHeader;
	uint8_t responseFrame[8] = {0};

	HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &responseHeader, responseFrame);

	if(responseFrame[2] == 0x67)
	{
		if(responseFrame[3] == 0x01)
			return resposneFrame[4] - 40;
		else if(responseFrame[3] == 0x02)
			return responseFrame[5] - 40;
	}
	else
		return 0;
}

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
	uint8_t engineTemp = CAN_RESPONSE(&hcan);

	CAN_REQUEST(1, 2, 0x67, &hcan);
}
