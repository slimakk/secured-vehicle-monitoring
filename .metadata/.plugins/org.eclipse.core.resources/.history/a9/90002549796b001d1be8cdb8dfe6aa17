/*
 * CAN.c
 *
 *  Created on: Nov 5, 2022
 *      Author: miros
 */
#include "CAN.h"


CAN_HandleTypeDef hcan1;

uint32_t txMailbox;

/*void CAN_REQUEST(uint8_t serviceID, uint8_t lenght, uint8_t PID, CAN_HandleTypeDef *hcan)
{
	CAN_TxHeaderTypeDef requestHeader;
	uint8_t requestFrame[8] = {lenght, serviceID, PID, 0x01, 0x1A, 0x00, 0x00, 0x00};
	requestHeader.DLC = 8;
	requestHeader.StdId = 0x7E8;
	requestHeader.IDE = CAN_ID_STD;
	requestHeader.RTR = CAN_RTR_REMOTE;

	HAL_CAN_AddTxMessage(hcan, &requestHeader, requestFrame, &txMailbox);
}*/

void MX_CAN1_Init(void)
{
	hcan1.Instance = CAN1;
	hcan1.Init.Prescaler = 16;
	hcan1.Init.Mode = CAN_MODE_NORMAL;
	hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
	hcan1.Init.TimeSeg1 = CAN_BS1_8TQ;
	hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
	hcan1.Init.TimeTriggeredMode = DISABLE;
	hcan1.Init.AutoBusOff = DISABLE;
	hcan1.Init.AutoWakeUp = DISABLE;
	hcan1.Init.AutoRetransmission = DISABLE;
	hcan1.Init.ReceiveFifoLocked = DISABLE;
	hcan1.Init.TransmitFifoPriority = DISABLE;
	if (HAL_CAN_Init(&hcan1) != HAL_OK)
	{
	  Error_Handler();
	}
}

void canConfig(void)
{
	CAN_FilterTypeDef canFilter;
	canFilter.FilterBank = 0;
	canFilter.FilterMode = CAN_FILTERMODE_IDMASK;
	canFilter.FilterScale = CAN_FILTERSCALE_32BIT;
	canFilter.FilterIdHigh = 0x7E8 << 5;
	canFilter.FilterIdLow = 0x0000;
	canFilter.FilterMaskIdHigh = 0x7F8 << 5;
	canFilter.FilterMaskIdLow = 0x0000;
	canFilter.FilterFIFOAssignment = CAN_RX_FIFO0;
	canFilter.FilterActivation = ENABLE;

	if(HAL_CAN_ConfigFilter(&hcan1, &canFilter) != HAL_OK)
	{
		Error_Handler();
	}

	if(HAL_CAN_Start(&hcan1) != HAL_OK)
	{
		Error_Handler();
	}
}

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
	CAN_RxHeaderTypeDef rxHeader;
	uint8_t rxData[RX_DATA_LENGTH];

	HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &rxHeader, rxData);

	OBD2_PrintResponse(rxData);
}

void CAN_SEND_MESSAGE(uint8_t* txFrame)
{
	CAN_TxHeaderTypeDef txHeader;
	txHeader.StdId = DEVICE_CAN_ID;
	txHeader.DLC = TX_DATA_LENGTH;
	txHeader.IDE = CAN_ID_STD;
	txHeader.RTR = CAN_RTR_REMOTE;

	if(HAL_CAN_AddTxMessage(&hcan1, &txHeader, txFrame, &txMailbox) != HAL_OK)
	{
		Error_Handler();
	}
}



